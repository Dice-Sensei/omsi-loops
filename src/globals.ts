import { copyObject } from './helpers.ts';
import { ActionLog } from './actionlog.ts';
import { Actions } from './actions.ts';

export const selfIsGame = !(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);
export const skillList = /** @type {const} */ ([
  'Combat',
  'Magic',
  'Practical',
  'Alchemy',
  'Crafting',
  'Dark',
  'Chronomancy',
  'Pyromancy',
  'Restoration',
  'Spatiomancy',
  'Mercantilism',
  'Divine',
  'Commune',
  'Wunderkind',
  'Gluttony',
  'Thievery',
  'Leadership',
  'Assassin',
]);

export const dungeonFloors = [6, 9, 20];
export const buffHardCaps = {
  Ritual: 666,
  Imbuement: 500,
  Imbuement2: 500,
  Imbuement3: 7,
  Feast: 100,
  Aspirant: 20,
  Heroism: 50,
  PrestigePhysical: 100,
  PrestigeMental: 100,
  PrestigeCombat: 100,
  PrestigeSpatiomancy: 100,
  PrestigeChronomancy: 100,
  PrestigeBartering: 100,
  PrestigeExpOverflow: 100,
};
export const buffCaps = {
  Ritual: 666,
  Imbuement: 500,
  Imbuement2: 500,
  Imbuement3: 7,
  Feast: 100,
  Aspirant: 20,
  Heroism: 50,
  PrestigePhysical: 100,
  PrestigeMental: 100,
  PrestigeCombat: 100,
  PrestigeSpatiomancy: 100,
  PrestigeChronomancy: 100,
  PrestigeBartering: 100,
  PrestigeExpOverflow: 100,
};
export const buffs = /** @type {{[K in BuffName]: Buff}} */ ({});
export const buffList = /** @type {const} */ ([
  'Ritual',
  'Imbuement',
  'Imbuement2',
  'Feast',
  'Aspirant',
  'Heroism',
  'Imbuement3',
  'PrestigePhysical',
  'PrestigeMental',
  'PrestigeCombat',
  'PrestigeSpatiomancy',
  'PrestigeChronomancy',
  'PrestigeBartering',
  'PrestigeExpOverflow',
]);
export const statList = /** @type {const} */ ['Dex', 'Str', 'Con', 'Spd', 'Per', 'Cha', 'Int', 'Luck', 'Soul'];

export const hearts = [];
export const resources = {
  gold: 0,
  reputation: 0,
  herbs: 0,
  hide: 0,
  potions: 0,
  teamMembers: 0,
  armor: 0,
  blood: 0,
  artifacts: 0,
  favors: 0,
  enchantments: 0,
  houses: 0,
  pylons: 0,
  zombie: 0,
  map: 0,
  completedMap: 0,
  heart: 0,
  power: 0,
  glasses: false,
  supplies: false,
  pickaxe: false,
  loopingPotion: false,
  citizenship: false,
  pegasus: false,
  key: false,
  stone: false,
  wizardCollege: false,
};

export const resourcesTemplate = copyObject(resources);
export const towns = /** @type {TownList<9>} */ (/** @type {Town[]} */ ([]));
export const skills = /** @type {{[K in SkillName]: Skill}} */ ({});

export type StatName = 'Dex' | 'Str' | 'Con' | 'Spd' | 'Per' | 'Cha' | 'Int' | 'Luck' | 'Soul';

export type Stat = {
  blurb: string;
  long_form: string;
  short_form: string;
};

export const stats: Record<StatName, Stat> = {};
export const actionLog = selfIsGame ? new ActionLog() : null;
export const actions = new Actions();

export const storyFlags = {
  maxSQuestsInALoop: false,
  realMaxSQuestsInALoop: false,
  maxLQuestsInALoop: false,
  realMaxLQuestsInALoop: false,
  heal10PatientsInALoop: false,
  failedHeal: false,
  clearSDungeon: false,
  haggle: false,
  haggle15TimesInALoop: false,
  haggle16TimesInALoop: false,
  glassesBought: false,
  partyThrown: false,
  partyThrown2: false,
  strengthTrained: false,
  suppliesBought: false,
  suppliesBoughtWithoutHaggling: false,
  smallDungeonAttempted: false,
  satByWaterfall: false,
  dexterityTrained: false,
  speedTrained: false,
  birdsWatched: false,
  darkRitualThirdSegmentReached: false,
  brewed50PotionsInALoop: false,
  failedBrewPotions: false,
  failedBrewPotionsNegativeRep: false,
  potionBrewed: false,
  failedGamble: false,
  failedGambleLowMoney: false,
  potionSold: false,
  sell20PotionsInALoop: false,
  sellPotionFor100Gold: false,
  sellPotionFor1kGold: false,
  manaZ3Bought: false,
  advGuildTestsTaken: false,
  advGuildRankEReached: false,
  advGuildRankDReached: false,
  advGuildRankCReached: false,
  advGuildRankBReached: false,
  advGuildRankAReached: false,
  advGuildRankSReached: false,
  advGuildRankUReached: false,
  advGuildRankGodlikeReached: false,
  teammateGathered: false,
  fullParty: false,
  failedGatherTeam: false,
  largeDungeonAttempted: false,
  clearLDungeon: false,
  craftGuildTestsTaken: false,
  craftGuildRankEReached: false,
  craftGuildRankDReached: false,
  craftGuildRankCReached: false,
  craftGuildRankBReached: false,
  craftGuildRankAReached: false,
  craftGuildRankSReached: false,
  craftGuildRankUReached: false,
  craftGuildRankGodlikeReached: false,
  armorCrafted: false,
  craft10Armor: false,
  craft20Armor: false,
  failedCraftArmor: false,
  booksRead: false,
  pickaxeBought: false,
  heroTrial1Done: false,
  heroTrial10Done: false,
  heroTrial25Done: false,
  heroTrial50Done: false,
  charonPaid: false,
  loopingPotionMade: false,
  slay6TrollsInALoop: false,
  slay20TrollsInALoop: false,
  imbueMindThirdSegmentReached: false,
  imbueBodyThirdSegmentReached: false,
  failedImbueBody: false,
  judgementFaced: false,
  ignoredByGods: false,
  acceptedIntoValhalla: false,
  castIntoShadowRealm: false,
  spokeToGuru: false,
  fellFromGrace: false,
  donatedToCharity: false,
  receivedDonation: false,
  failedReceivedDonations: false,
  tidiedUp: false,
  manaZ5Bought: false,
  artifactSold: false,
  artifactDonated: false,
  donated20Artifacts: false,
  donated40Artifacts: false,
  charmSchoolVisited: false,
  oracleVisited: false,
  armorEnchanted: false,
  enchanted10Armor: false,
  enchanted20Armor: false,
  repeatedCitizenExam: false,
  houseBuilt: false,
  housesBuiltGodlike: false,
  built50Houses: false,
  collectedTaxes: false,
  collected50Taxes: false,
  acquiredPegasus: false,
  acquiredPegasusWithTeam: false,
  giantGuildTestTaken: false,
  giantGuildRankDReached: false,
  giantGuildRankCReached: false,
  giantGuildRankEReached: false,
  giantGuildRankBReached: false,
  giantGuildRankAReached: false,
  giantGuildRankSReached: false,
  giantGuildRankSSReached: false,
  giantGuildRankSSSReached: false,
  giantGuildRankUReached: false,
  giantGuildRankGodlikeReached: false,
  blessingSought: false,
  greatBlessingSought: false,
  feastAttempted: false,
  meanderIM100: false,
  wellDrawn: false,
  drew10Wells: false,
  drew15Wells: false,
  drewDryWell: false,
  attemptedRaiseZombie: false,
  failedRaiseZombie: false,
  spireAttempted: false,
  clearedSpire: false,
  spire10Pylons: false,
  spire20Pylons: false,
  suppliesPurchased: false,
  deadTrial1Done: false,
  deadTrial10Done: false,
  deadTrial25Done: false,
  monsterGuildTestTaken: false,
  monsterGuildRankDReached: false,
  monsterGuildRankCReached: false,
  monsterGuildRankBReached: false,
  monsterGuildRankAReached: false,
  monsterGuildRankSReached: false,
  monsterGuildRankSSReached: false,
  monsterGuildRankSSSReached: false,
  monsterGuildRankUReached: false,
  monsterGuildRankGodlikeReached: false,
  survivorRescued: false,
  rescued6Survivors: false,
  rescued20Survivors: false,
  buffetHeld: false,
  buffetFor1: false,
  buffetFor6: false,
  portalOpened: false,
  excursionAsGuildmember: false,
  explorerGuildTestTaken: false,
  mapTurnedIn: false,
  thiefGuildTestsTaken: false,
  thiefGuildRankEReached: false,
  thiefGuildRankDReached: false,
  thiefGuildRankCReached: false,
  thiefGuildRankBReached: false,
  thiefGuildRankAReached: false,
  thiefGuildRankSReached: false,
  thiefGuildRankUReached: false,
  thiefGuildRankGodlikeReached: false,
  assassinHeartDelivered: false,
  assassin4HeartsDelivered: false,
  assassin8HeartsDelivered: false,
  investedOne: false,
  investedTwo: false,
  interestCollected: false,
  collected1KInterest: false,
  collected1MInterest: false,
  collectedMaxInterest: false,
  seminarAttended: false,
  leadership10: false,
  leadership100: false,
  leadership1k: false,
  keyBought: false,
  trailSecretFaced: false,
  trailSecret1Done: false,
  trailSecret10Done: false,
  trailSecret100Done: false,
  trailSecret500Done: false,
  trailSecretAllDone: false,
  soulInfusionAttempted: false,
  trailGodsFaced: false,
  trailGods10Done: false,
  trailGods20Done: false,
  trailGods30Done: false,
  trailGods40Done: false,
  trailGods50Done: false,
  trailGods60Done: false,
  trailGods70Done: false,
  trailGods80Done: false,
  trailGods90Done: false,
  trailGodsAllDone: false,
  fightGods01: false,
  fightGods02: false,
  fightGods03: false,
  fightGods04: false,
  fightGods05: false,
  fightGods06: false,
  fightGods07: false,
  fightGods08: false,
  fightGods09: false,
  fightGods10: false,
  fightGods11: false,
  fightGods12: false,
  fightGods13: false,
  fightGods14: false,
  fightGods15: false,
  fightGods16: false,
  fightGods17: false,
  fightGods18: false,
};

export const storyVars = {
  maxWizardGuildSegmentCleared: -1,
  maxZombiesRaised: -1,
};

const _globals = {
  selfIsGame,
  storyFlags,
  storyVars,
  actionLog,
  buffCaps,
  actions,
  skills,
  towns,
  buffs,
  stats,
  skillList,
  buffList,
  statList,
  buffHardCaps,
  dungeonFloors,
  hearts,
  resources,
  resourcesTemplate,
};

declare global {
  var globals: typeof _globals;
}

globalThis.globals = _globals;
